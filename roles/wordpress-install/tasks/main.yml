---
- name: Create WordPress database
  mysql_db:
    name: "{{ wordpress_db_name }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  tags:
    - wp-install

- name: Create WordPress DB user and grant permissions to WordPress DB
  mysql_user:
    name: "{{ wordpress_db_user }}"
    password: "{{ wordpress_db_user_pass }}"
    priv: "{{ wordpress_db_name }}.*:ALL"
    state: present
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
  tags:
    - wp-install

- name: Is WordPress downloaded?
  stat: path="{{ remote_wordpress_dir }}/index.php"
  register: wp_dir
  tags:
    - wp-install

- name: Create WordPress directory
  file:
    path: "{{ remote_wordpress_dir }}"
    owner: "{{ remote_deploy_user }}"
    group: "{{ remote_deploy_group }}"
    mode: 0755
    state: directory
  when: wp_dir.stat.isdir is not defined
  tags:
    - wp-install

- name: Download WordPress
  command: wp core download
          --allow-root
  args:
      chdir: "{{ remote_wordpress_dir }}/"
  remote_user: "{{ remote_deploy_user }}"
  when: wp_dir.stat.isdir is not defined
  tags:
    - wp-install

- name: Configure WordPress
  command: wp core config
          --allow-root
          --path="{{ remote_wordpress_dir }}"
          --dbname="{{ wordpress_db_name }}"
          --dbuser="{{ wordpress_db_user }}"
          --dbpass="{{ wordpress_db_user_pass }}"
          --dbprefix="{{ wordpress_db_prefix }}"
  remote_user: "{{ remote_deploy_user }}"
  when: wp_dir.stat.isdir is not defined
  tags:
    - wp-install

- name: Is WordPress installed?
  command: wp core is-installed
          --allow-root
  args:
    chdir: "{{ remote_wordpress_dir }}/"
  register: wordpress_is_installed
  ignore_errors: True
  remote_user: "{{ remote_deploy_user }}"
  tags:
    - wp-install

- name: Install WordPress tables
  command: wp core install
          --allow-root
          --url="{{ wordpress_home_url }}"
          --title="{{ wordpress_site_title }}"
          --admin_user="{{ wordpress_admin_user }}"
          --admin_password="{{ wordpress_admin_user_pass }}"
          --admin_email="{{ wordpress_admin_email }}"
  args:
      chdir: "{{ remote_wordpress_dir }}/"
  when: wordpress_is_installed|failed
  remote_user: "{{ remote_deploy_user }}"
  tags:
    - wp-install

- name: Is Site Log directory created?
  stat: path="{{ www_root }}/logs"
  register: log_dir
  tags:
    - wp-install

- name: Create Site Log directory
  file:
    path: "{{ www_root }}/logs/"
    owner: "{{ remote_deploy_user }}"
    group: "{{ remote_deploy_group }}"
    mode: 0755
    state: directory
  when: log_dir.stat.isdir is not defined
  tags:
    - wp-install

- name: Create WordPress configuration for Nginx
  template:
    src: "wordpress-site.conf.j2"
    dest: "{{ nginx_path }}/sites-available/{{ wordpress_sites }}.conf"
  notify: restart nginx
  tags:
    - wp-install-nginx

- name: Enable WordPress site
  file:
    src: "{{ nginx_path }}/sites-available/{{ wordpress_sites }}.conf"
    dest: "{{ nginx_path }}/sites-enabled/{{ wordpress_sites }}.conf"
    owner: root
    group: root
    state: link
  notify: restart nginx
  tags:
    - wp-install-nginx

- name: Check WP theme exist
  stat: path="{{ remote_wordpress_dir }}/wp-content/themes/.git"
  register: git_theme_exists
  tags:
    - theme-install

- name: Clone WP theme
  git:
    repo: "{{ wordpress_git_url }}"
    dest: "{{ remote_wordpress_dir }}/wp-content/themes/{{ wordpress_sites }}"
    version: master
    accept_hostkey: yes
    force: yes
  when: not git_theme_exists.stat.exists
  tags:
    - theme-install

- name: theme install and activate
  command: wp theme activate "{{ wordpress_sites }}" --path="{{ remote_wordpress_dir }}"
          --allow-root
  ignore_errors: yes
  when: not git_theme_exists.stat.exists
  tags:
    - theme-install

- name: Change owner for Wordpress to be www-data user group
  command: chown -R "{{ remote_deploy_user }}":"{{ remote_deploy_group }}" "{{ www_root }}"
  tags:
    - wp-permission

- name: Change permission for all Wordpress directory
  command: find "{{ www_root }}" -type d -exec chmod 755 {} \;
  tags:
    - wp-permission

- name: Change permission for all Wordpress files
  command: find "{{ www_root }}" -type f -exec chmod 644 {} \;
  tags:
    - wp-permission
